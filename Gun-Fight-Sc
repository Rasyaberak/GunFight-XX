local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local localPlayer = Players.LocalPlayer

-- Tween configuration
local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
local pulseInfo = TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true)

-- Function to tween highlight colors
local function tweenHighlightColors(highlight, targetFillColor, targetOutlineColor)
    if not highlight then return end
    local tween = TweenService:Create(highlight, tweenInfo, {
        FillColor = targetFillColor,
        OutlineColor = targetOutlineColor,
    })
    tween:Play()
end

-- Function to create a pulsating effect for enemies
local function createPulseEffect(highlight, baseColor)
    if not highlight then return end
    local pulseTween = TweenService:Create(highlight, pulseInfo, {
        FillColor = baseColor:Lerp(Color3.new(1, 1, 1), 0.3),
    })
    pulseTween:Play()
end

-- Function to check if a player is a bot
local function isBot(player)
    return player:GetAttribute("IsBot") == true or string.find(player.Name, "Bot") ~= nil
end

-- Function to get highlight colors based on team and status
local function getTargetColors(player)
    if isBot(player) then
        return Color3.fromRGB(255, 165, 0), Color3.fromRGB(255, 140, 0)
    elseif player.Team == localPlayer.Team then
        return Color3.fromRGB(0, 150, 255), Color3.fromRGB(0, 120, 255)
    else
        return Color3.fromRGB(255, 0, 0), Color3.fromRGB(200, 0, 0)
    end
end

-- Function to apply or update the highlight
local function applyHighlight(character)
    if not character then return end
    local highlight = character:FindFirstChild("Highlight")
    if not highlight then
        highlight = Instance.new("Highlight")
        highlight.Name = "Highlight"
        highlight.Parent = character
        highlight.FillColor = Color3.new(0, 0, 0)
        highlight.OutlineColor = Color3.new(0, 0, 0)
    end
    
    local player = Players:GetPlayerFromCharacter(character)
    if player then
        local targetFill, targetOutline = getTargetColors(player)
        tweenHighlightColors(highlight, targetFill, targetOutline)
        
        if player.Team ~= localPlayer.Team and not isBot(player) then
            createPulseEffect(highlight, targetFill)
        end
    end
end

-- Function to handle character spawn
local function onCharacterAdded(character)
    character:WaitForChild("Humanoid", 5)
    applyHighlight(character)
end

-- Function to handle new players
local function onPlayerAdded(player)
    player.CharacterAdded:Connect(onCharacterAdded)
    if player.Character then
        onCharacterAdded(player.Character)
    end
end

-- Apply to existing players
for _, player in ipairs(Players:GetPlayers()) do
    onPlayerAdded(player)
end

-- Listen for new players
Players.PlayerAdded:Connect(onPlayerAdded)

-- Cleanup when players leave
Players.PlayerRemoving:Connect(function(player)
    if player.Character then
        local highlight = player.Character:FindFirstChild("Highlight")
        if highlight then
            highlight:Destroy()
        end
    end
end)

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer
local ESP_Lines = {} -- Store ESP lines

-- Function to create an ESP line for an enemy
local function CreateESPLine(player)
    if not player or player == LocalPlayer or player.Team == LocalPlayer.Team then return end

    local line = Drawing.new("Line")
    line.Thickness = 1.5
    line.Transparency = 1
    line.Color = Color3.fromRGB(255, 0, 0) -- **Red for enemy ESP**
    line.Visible = false

    ESP_Lines[player] = line

    RunService.RenderStepped:Connect(function()
        if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local rootPart = player.Character.HumanoidRootPart
            local screenPos, onScreen = Camera:WorldToViewportPoint(rootPart.Position)

            -- Get camera direction
            local cameraDirection = Camera.CFrame.LookVector
            local targetDirection = (rootPart.Position - Camera.CFrame.Position).unit

            -- Check if the player is looking at the enemy (ignores looking down or straight)
            local dotProduct = cameraDirection:Dot(targetDirection)
            if onScreen and dotProduct > 0.5 then -- **Adjust 0.5 for sensitivity**
                line.Visible = true
                line.From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y)
                line.To = Vector2.new(screenPos.X, screenPos.Y)
            else
                line.Visible = false
            end
        else
            line.Visible = false
        end
    end)
end

-- Function to remove ESP when an enemy leaves
local function RemoveESPLine(player)
    if ESP_Lines[player] then
        ESP_Lines[player]:Remove()
        ESP_Lines[player] = nil
    end
end

-- Apply ESP to all current enemies
for _, player in pairs(Players:GetPlayers()) do
    CreateESPLine(player)
end

-- Detect new enemies joining
Players.PlayerAdded:Connect(function(player)
    CreateESPLine(player)
end)

-- Detect enemies leaving and remove ESP
Players.PlayerRemoving:Connect(function(player)
    RemoveESPLine(player)
end)


local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local Camera = workspace.CurrentCamera
local RunService = game:GetService("RunService")

-- Configuration
local AIM_SMOOTHNESS = 0.2 -- Lower = Faster Aiming
local SPREAD_AMOUNT = 5 -- Small random offset to prevent perfect tracking

-- Function to check if a player is an enemy
local function isEnemy(player)
    if player and player.Team ~= LocalPlayer.Team then
        return true
    end
    return false
end

-- Function to find the closest enemy head
local function findClosestEnemyHead()
    local closestHead = nil
    local shortestDistance = math.huge

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and isEnemy(player) and player.Character then
            local head = player.Character:FindFirstChild("Head")
            if head then
                local screenPos, onScreen = Camera:WorldToScreenPoint(head.Position)
                if onScreen then
                    local distance = (Vector2.new(Mouse.X, Mouse.Y) - Vector2.new(screenPos.X, screenPos.Y)).Magnitude
                    if distance < shortestDistance then
                        shortestDistance = distance
                        closestHead = head
                    end
                end
            end
        end
    end
    return closestHead
end

-- Function to smoothly move aim toward target
local function smoothAim(targetHead)
    if targetHead then
        local screenPos, onScreen = Camera:WorldToScreenPoint(targetHead.Position)
        if onScreen then
            local targetX = screenPos.X + math.random(-SPREAD_AMOUNT, SPREAD_AMOUNT)
            local targetY = screenPos.Y + math.random(-SPREAD_AMOUNT, SPREAD_AMOUNT)

            Mouse.X = Mouse.X + (targetX - Mouse.X) * AIM_SMOOTHNESS
            Mouse.Y = Mouse.Y + (targetY - Mouse.Y) * AIM_SMOOTHNESS
        end
    end
end

-- Function to handle shooting (PC & Mobile)
local function onShoot()
    local targetHead = findClosestEnemyHead()
    if targetHead then
        smoothAim(targetHead) -- Smoothly adjust aim
        task.wait(0.1) -- Small delay to make aim look natural
        -- Simulate a direct hit on the enemy's head
        local humanoid = targetHead.Parent:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid:TakeDamage(50) -- Adjust damage as needed
        end
    end
end

-- Detect PC Shooting (Mouse Click)
Mouse.Button1Down:Connect(onShoot)

-- Detect Mobile Shooting (Touch Tap)
UserInputService.TouchTap:Connect(function(_, processed)
    if not processed then
        onShoot()
    end
end)

-- Smooth Aimbot Loop
RunService.RenderStepped:Connect(function()
    local targetHead = findClosestEnemyHead()
    if targetHead then
        smoothAim(targetHead)
    end
end)
